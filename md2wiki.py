import re
import sys

UNORD_LST = False
ORD_LST = False
TABLE = False
MATH = False
REF = False

def env_end(line):
    global UNORD_LST, ORD_LST, TABLE, MATH, REF
    if line == "" or line[0] == "\n":
        if UNORD_LST:
            line = "\n"
            UNORD_LST = False
        elif ORD_LST:
            line = "\n"
            ORD_LST = False
        elif TABLE:
            line = "\n"
            TABLE = False
        elif MATH:
            line = "</math>\n"
            MATH = False
        # elif REF:
        #     line = "\\end{thebibliography}\n\n"
        #     REF = False
    return line

outfile_name = "output.wk"
outfile = open(outfile_name,"w",encoding="utf-8")
# outfile.write("<html><!-- {} - Generated by md2wiki.py --></html>\n\n".format(outfile_name))
with open(sys.argv[1],"r",encoding="utf-8") as infile:
    for line in infile:
        line = line.strip()
        # headings
        line = re.sub(r"^# (.*?)$",r"===== \1 =====",line)
        line = re.sub(r"^## (.*?)$",r"==== \1 ====",line)
        line = re.sub(r"^### (.*?)$",r"=== \1 ===",line)
        # fonts
        line = re.sub(r"\*\*(.*?)\*\*",r"**\1**",line)
        line = re.sub(r" \*([^\*].)([^ ].*?)([^\*].)\* ",r" //\1\2\3// ",line) # distinguish with unordered lists
        # line = re.sub(r'<font color="(.*?)">(.*?)</font>', \
        #               r'<html><font color="\1">\2</font></html>',line)
        line = re.sub(r'<u>(.*?)</u>',r'__\1__',line)
        line = re.sub(r'<br/>','\\\\',line)
        # codes
        line = re.sub(r'```([a-z]+)',r'<code \1>',line)
        line = re.sub(r'```',r'</code>',line)
        line = re.sub(r'`(.*?)`',r"<code>\1</code>",line)
        # math
        line = re.sub(r'\$\$(.*?)\$\$',r'$\1$',line)
        # figures
        line = re.sub(r'!\[.*?\]\((.*?)\)',
                      r'{{\1}}\n',line)
        # line = re.sub(r'{% include image\.html fig="(.*?)".*?%}',
        #               r'\\begin{figure}[H]\n'
        #               r'\centering\n'
        #               r'\includegraphics[width=0.8\linewidth]{\1}\n'
        #               r'\end{figure}',line)
        # links
        line = re.sub(r'\[([^\[\]]*?)\]\((.*?)\)',r'[[\2|\1]]',line)
        line = re.sub(r'<(http.*?)>',r'\1 ',line)
        # line = re.sub(r'{% post_url (.*?) %}',r'_post/\1',line)
        # big environments
        if line[:2] == "* ": # unordered lists
            if UNORD_LST:
                line = "  * " + line[1:]
            else:
                line = "  * " + line[1:]
                UNORD_LST = True
        elif re.match(r"[0-9]+\. ",line) != None: # ordered lists
            idx = re.match(r"[0-9]+\.",line).span()[1]
            if ORD_LST:
                line = "  - " + line[idx:]
            else:
                line = "  - " + line[idx:]
                ORD_LST = True
        elif "$$" in line: # display math
            if MATH:
                line = line.replace("$$","<math>")
                MATH = False
            else:
                line = line.replace("$$","</math>")
                MATH = True
        elif "|" in line: # tables
            line = line.strip()
            if ":-" in line or "-:" in line:
                continue
            line = line
        # elif re.match(r"\[\^([0-9]*)\]:",line) != None: # references
        #     if REF:
        #         line = re.sub(r'\[\^([0-9]*)\]:',r'\\bibitem{bibitem:\1}',line)
        #     else:
        #         line = "\\begin{thebibliography}{99}\n" + re.sub(r'\[\^([0-9]*)\]:',r'\\bibitem{bibitem:\1}',line)
        #         REF = True
        else:
            line = env_end(line)
        # # references
        # line = re.sub(r'\[\^([0-9]*)\]',r'\cite{bibitem:\1}',line)
        # # comments
        # line = re.sub(r'<!--(.*?)-->',r'% \1',line)
        line += '\n'
        outfile.write(line)
    line = env_end("")
    outfile.write(line)

outfile.close()